{
  "@context": {
    "id": "@id",
    "type": "@type",
    "cc": "http://creativecommons.org/ns#",
    "cnt": "http://www.w3.org/2008/content#",
    "csvm": "http://www.w3.org/ns/csvm#",
    "ctag": "http://commontag.org/ns#",
    "dc": "http://purl.org/dc/terms/",
    "dc11": "http://purl.org/dc/elements/1.1/",
    "dcat": "http://www.w3.org/ns/dcat#",
    "dcterms": "http://purl.org/dc/terms/",
    "earl": "http://www.w3.org/ns/earl#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "gldp": "http://www.w3.org/ns/people#",
    "gr": "http://purl.org/goodrelations/v1#",
    "grddl": "http://www.w3.org/2003/g/data-view#",
    "ht": "http://www.w3.org/2006/http#",
    "ical": "http://www.w3.org/2002/12/cal/icaltzd#",
    "ma": "http://www.w3.org/ns/ma-ont#",
    "og": "http://ogp.me/ns#",
    "org": "http://www.w3.org/ns/org#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "prov": "http://www.w3.org/ns/prov#",
    "ptr": "http://www.w3.org/2009/pointers#",
    "qb": "http://purl.org/linked-data/cube#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfa": "http://www.w3.org/ns/rdfa#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "rev": "http://purl.org/stuff/rev#",
    "rif": "http://www.w3.org/2007/rif#",
    "rr": "http://www.w3.org/ns/r2rml#",
    "schema": {
      "@id": "csvm:schema",
      "@type": "@id"
    },
    "sd": "http://www.w3.org/ns/sparql-service-description#",
    "sioc": "http://rdfs.org/sioc/ns#",
    "skos": "http://www.w3.org/2004/02/skos/core#",
    "skosxl": "http://www.w3.org/2008/05/skos-xl#",
    "v": "http://rdf.data-vocabulary.org/#",
    "vcard": "http://www.w3.org/2006/vcard/ns#",
    "void": "http://rdfs.org/ns/void#",
    "wdr": "http://www.w3.org/2007/05/powder#",
    "wrds": "http://www.w3.org/2007/05/powder-s#",
    "xhv": "http://www.w3.org/1999/xhtml/vocab#",
    "xml": "rdf:XMLLiteral",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "any": "xsd:anySimpleType",
    "binary": "xsd:base64Binary",
    "datetime": "xsd:dateTime",
    "describedby": "wrds:describedby",
    "html": "rdf:HTML",
    "license": "xhv:license",
    "maximum": "csvm:maxInclusive",
    "minimum": "csvm:minInclusive",
    "number": "xsd:double",
    "role": "xhv:role",
    "Column": "csvm:Column",
    "Dialect": "csvm:Dialect",
    "Direction": "csvm:Direction",
    "Schema": "csvm:Schema",
    "Table": "csvm:Table",
    "TableGroup": "csvm:TableGroup",
    "Template": "csvm:Template",
    "columns": {
      "@id": "csvm:columns",
      "@type": "@id",
      "@container": "@list"
    },
    "commentPrefix": {
      "@id": "csvm:commentPrefix"
    },
    "datatype": {
      "@id": "csvm:datatype"
    },
    "default": {
      "@id": "csvm:default"
    },
    "delimieter": {
      "@id": "csvm:delimieter"
    },
    "dialect": {
      "@id": "csvm:dialect",
      "@type": "@vocab"
    },
    "doubleQuote": {
      "@id": "csvm:doubleQuote",
      "@type": "xsd:boolean"
    },
    "encoding": {
      "@id": "csvm:encoding"
    },
    "foreignKeys": {
      "@id": "csvm:foreignKeys"
    },
    "format": {
      "@id": "csvm:format"
    },
    "header": {
      "@id": "csvm:header",
      "@type": "xsd:boolean"
    },
    "headerColumnCount": {
      "@id": "csvm:headerColumnCount",
      "@type": "xsd:nonNegativeInteger"
    },
    "headerRowCount": {
      "@id": "csvm:headerRowCount",
      "@type": "xsd:nonNegativeInteger"
    },
    "language": {
      "@id": "csvm:language"
    },
    "length": {
      "@id": "csvm:length",
      "@type": "xsd:nonNegativeInteger"
    },
    "lineTerminator": {
      "@id": "csvm:lineTerminator"
    },
    "maxExclusive": {
      "@id": "csvm:maxExclusive"
    },
    "maxInclusive": {
      "@id": "csvm:maxInclusive"
    },
    "maxLength": {
      "@id": "csvm:maxLength",
      "@type": "xsd:nonNegativeInteger"
    },
    "minExclusive": {
      "@id": "csvm:minExclusive"
    },
    "minInclusive": {
      "@id": "csvm:minInclusive"
    },
    "minLength": {
      "@id": "csvm:minLength",
      "@type": "xsd:nonNegativeInteger"
    },
    "name": {
      "@id": "csvm:name"
    },
    "notes": {
      "@id": "csvm:notes"
    },
    "null": {
      "@id": "csvm:null"
    },
    "primaryKey": {
      "@id": "csvm:primaryKey"
    },
    "quoteChar": {
      "@id": "csvm:quoteChar"
    },
    "required": {
      "@id": "csvm:required",
      "@type": "xsd:boolean"
    },
    "resources": {
      "@id": "csvm:resources",
      "@type": "@id"
    },
    "separator": {
      "@id": "csvm:separator"
    },
    "skipBlankRows": {
      "@id": "csvm:skipBlankRows",
      "@type": "xsd:boolean"
    },
    "skipColumns": {
      "@id": "csvm:skipColumns",
      "@type": "xsd:nonNegativeInteger"
    },
    "skipInitialSpace": {
      "@id": "csvm:skipInitialSpace",
      "@type": "xsd:boolean"
    },
    "skipRows": {
      "@id": "csvm:skipRows",
      "@type": "xsd:nonNegativeInteger"
    },
    "source": {
      "@id": "csvm:source"
    },
    "table-direction": {
      "@id": "csvm:table-direction",
      "@type": "@vocab"
    },
    "targetFormat": {
      "@id": "csvm:targetFormat"
    },
    "templateFormat": {
      "@id": "csvm:templateFormat"
    },
    "templates": {
      "@id": "csvm:templates",
      "@type": "@id"
    },
    "text-direction": {
      "@id": "csvm:text-direction",
      "@type": "@vocab"
    },
    "title": {
      "@id": "csvm:title",
      "@container": "@list"
    },
    "trim": {
      "@id": "csvm:trim",
      "@type": "xsd:boolean"
    },
    "uriTemplate": {
      "@id": "csvm:uriTemplate"
    },
    "json": "csvm:json",
    "rdfs:domain": {
      "@type": "@id"
    },
    "rdfs:range": {
      "@type": "@id"
    },
    "rdfs:subClassOf": {
      "@type": "@id"
    },
    "rdfs:subPropertyOf": {
      "@type": "@id"
    },
    "owl:equivalentClass": {
      "@type": "@vocab"
    },
    "owl:equivalentProperty": {
      "@type": "@vocab"
    },
    "owl:oneOf": {
      "@container": "@list",
      "@type": "@vocab"
    },
    "owl:imports": {
      "@type": "@id"
    },
    "owl:versionInfo": {
      "@type": "xsd:string",
      "@language": null
    },
    "owl:inverseOf": {
      "@type": "@vocab"
    },
    "owl:unionOf": {
      "@type": "@vocab",
      "@container": "@list"
    }
  },
  "@graph": [
    {
      "@id": "http://www.w3.org/ns/csvm#",
      "dc:title": "Metadata Vocabulary for Tabular Data",
      "dc:description": "Validation, conversion, display and search of tabular data on the web\n    requires additional metadata that describes how the data should be\n    interpreted. This document defines a vocabulary for metadata that\n    annotates tabular data. This can be used to provide metadata at various\n    levels, from collections of data from CSV documents and how they relate\n    to each other down to individual cells within a table."
    },
    {
      "@id": "csvm:Column",
      "@type": "rdfs:Class",
      "rdfs:label": "Column Description",
      "rdfs:comment": "A Column Description describes a single column."
    },
    {
      "@id": "csvm:Dialect",
      "@type": "rdfs:Class",
      "rdfs:label": "Dialect Description",
      "rdfs:comment": "A Dialect Description provides hints to parsers about how to parse a linked file."
    },
    {
      "@id": "csvm:Direction",
      "@type": "rdfs:Class",
      "rdfs:label": "Direction",
      "rdfs:comment": "The class of table/text directions."
    },
    {
      "@id": "csvm:Schema",
      "@type": "rdfs:Class",
      "rdfs:label": "Schema",
      "rdfs:comment": "A Schema is a definition of a tabular format that may be common to multiple tables."
    },
    {
      "@id": "csvm:Table",
      "@type": "rdfs:Class",
      "rdfs:label": "Table Description",
      "rdfs:comment": "A table description is a JSON object that describes a table within a CSV file."
    },
    {
      "@id": "csvm:TableGroup",
      "@type": "rdfs:Class",
      "rdfs:label": "Table Group Description",
      "rdfs:comment": "A Table Group Description describes a group of Tables."
    },
    {
      "@id": "csvm:Template",
      "@type": "rdfs:Class",
      "rdfs:label": "Template Specification",
      "rdfs:comment": "A Template Specification is a definition of how tabular data can be transformed into another format."
    },
    {
      "@id": "csvm:columns",
      "@type": "rdf:Property",
      "rdfs:label": "columns",
      "rdfs:comment": "An array of Column Descriptions.",
      "rdfs:domain": "Schema",
      "rdfs:range": "Column"
    },
    {
      "@id": "csvm:commentPrefix",
      "@type": "rdf:Property",
      "rdfs:label": "comment prefix",
      "rdfs:comment": "A character that, when it appears at the beginning of a skipped row, indicates a comment that should be associated as a comment annotation to the table. The default is \"#\".",
      "rdfs:domain": "Dialect"
    },
    {
      "@id": "csvm:datatype",
      "@type": "rdf:Property",
      "rdfs:label": "datatype",
      "rdfs:comment": "The main datatype of the values of the cell. If the cell contains a list (ie separator is specified and not null) then this is the datatype of each value within the list.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:default",
      "@type": "rdf:Property",
      "rdfs:label": "default",
      "rdfs:comment": null
    },
    {
      "@id": "csvm:delimieter",
      "@type": "rdf:Property",
      "rdfs:label": "delimiter",
      "rdfs:comment": "The separator between cells. The default is \",\".",
      "rdfs:domain": "Dialect"
    },
    {
      "@id": "csvm:dialect",
      "@type": "rdf:Property",
      "rdfs:label": "dialect",
      "rdfs:comment": "Provides hints to processors about how to parse the referenced files for to create tabular data models for an individual table, or all the tables in a group.",
      "rdfs:domain": {
        "owl:unionOf": [
          "TableGroup",
          "Table"
        ]
      },
      "rdfs:range": "Dialect"
    },
    {
      "@id": "csvm:doubleQuote",
      "@type": "rdf:Property",
      "rdfs:label": "double quote",
      "rdfs:comment": "If true, sets the escape character flag to \". If false, to \\.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:encoding",
      "@type": "rdf:Property",
      "rdfs:label": "encoding",
      "rdfs:comment": "The character encoding for the file, one of the encodings listed in [encoding]. The default is utf-8.",
      "rdfs:domain": "Dialect"
    },
    {
      "@id": "csvm:foreignKeys",
      "@type": "rdf:Property",
      "rdfs:label": "foreign keys",
      "rdfs:comment": "An array of foreign key definitions that define how the values from specified columns within this table link to rows within this table or other tables. A foreign key definition is a JSON object with the properties:\n\ncolumns\nA column reference property that holds either a single reference to a column description object within this schema, or an array of references.\nreference\nAn object with the properties:\n\nresource\nA URL that is the identifier for a specific resource that is being referenced. If this is present then schema must not be present. The metadata document must contain a description of the resource.\nschema\nA URL that is the identifier for a schema that is being referenced. If this is present then resource must not be present. The metadata document that forms the basis of processing must contain a description of a resource that uses the referenced schema, and there must not be more than one such resource.\ncolumns\nA column reference property that holds either a single reference to a column description object within this schema, or an array of references.",
      "rdfs:domain": "Schema"
    },
    {
      "@id": "csvm:format",
      "@type": "rdf:Property",
      "rdfs:label": "format",
      "rdfs:comment": "A definition of the format of the cell, used when parsing the cell.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:header",
      "@type": "rdf:Property",
      "rdfs:label": "header",
      "rdfs:comment": null,
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:headerColumnCount",
      "@type": "rdf:Property",
      "rdfs:label": "header column count",
      "rdfs:comment": "The number of header columns (following the skipped columns) in each row. The default is 0.\n",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:headerRowCount",
      "@type": "rdf:Property",
      "rdfs:label": "header row count",
      "rdfs:comment": "The number of header rows (following the skipped rows) in the file. The default is 1.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:language",
      "@type": "rdf:Property",
      "rdfs:label": "language",
      "rdfs:comment": "A language code as defined by [BCP47]. Indicates the language of the value within the cell.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:length",
      "@type": "rdf:Property",
      "rdfs:label": "length",
      "rdfs:comment": "The exact length of the value of the cell.",
      "rdfs:domain": "Column",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:lineTerminator",
      "@type": "rdf:Property",
      "rdfs:label": "line terminator",
      "rdfs:comment": "The character that is used at the end of a row. The default is CRLF.",
      "rdfs:domain": "Dialect"
    },
    {
      "@id": "csvm:maxExclusive",
      "@type": "rdf:Property",
      "rdfs:label": "max exclusive",
      "rdfs:comment": "The maximum value for the cell (exclusive).",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:maxInclusive",
      "@type": "rdf:Property",
      "rdfs:label": "max inclusive",
      "rdfs:comment": "The maximum value for the cell (inclusive). ",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:maxLength",
      "@type": "rdf:Property",
      "rdfs:label": "max length",
      "rdfs:comment": "The maximum length of the value of the cell.",
      "rdfs:domain": "Column",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:minExclusive",
      "@type": "rdf:Property",
      "rdfs:label": "min exclusive",
      "rdfs:comment": "The minimum value for the cell (exclusive).",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:minInclusive",
      "@type": "rdf:Property",
      "rdfs:label": "min inclusive",
      "rdfs:comment": "The minimum value for the cell (inclusive).",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:minLength",
      "@type": "rdf:Property",
      "rdfs:label": "min length",
      "rdfs:comment": "The minimum length of the value of the cell.",
      "rdfs:domain": "Column",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:name",
      "@type": "rdf:Property",
      "rdfs:label": "name",
      "rdfs:comment": "An atomic property that gives a canonical name for the column. This must be a string. Conversion specifications must use this property as the basis for the names of properties/elements/attributes in the results of conversions.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:notes",
      "@type": "rdf:Property",
      "rdfs:label": "notes",
      "rdfs:comment": "An array of objects representing annotations. This specification does not place any constraints on the structure of these objects.",
      "rdfs:domain": "Table"
    },
    {
      "@id": "csvm:null",
      "@type": "rdf:Property",
      "rdfs:label": "null",
      "rdfs:comment": "The string used for null values. If not specified, the default for this is the empty string.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:primaryKey",
      "@type": "rdf:Property",
      "rdfs:label": "primary key",
      "rdfs:comment": "A column reference property that holds either a single reference to a column description object or an array of references.",
      "rdfs:domain": "Schema"
    },
    {
      "@id": "csvm:quoteChar",
      "@type": "rdf:Property",
      "rdfs:label": "quote char",
      "rdfs:comment": "The character that is used around escaped cells.",
      "rdfs:domain": "Dialect"
    },
    {
      "@id": "csvm:required",
      "@type": "rdf:Property",
      "rdfs:label": "required",
      "rdfs:comment": "A boolean value which indicates whether every cell within the column must have a non-null value.",
      "rdfs:domain": "Column",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:resources",
      "@type": "rdf:Property",
      "rdfs:label": "resources",
      "rdfs:comment": "An array of table descriptions for the tables in the group.",
      "rdfs:domain": "TableGroup",
      "rdfs:range": "Table"
    },
    {
      "@id": "csvm:schema",
      "@type": "rdf:Property",
      "rdfs:label": "schema",
      "rdfs:comment": "An object property that provides a schema description for an individual table, or all the tables in a group.",
      "rdfs:domain": {
        "owl:unionOf": [
          "TableGroup",
          "Table"
        ]
      },
      "rdfs:range": "Schema"
    },
    {
      "@id": "csvm:separator",
      "@type": "rdf:Property",
      "rdfs:label": "separator",
      "rdfs:comment": "The character used to separate items in the string value of the cell. If null or unspecified, the cell does not contain a list. Otherwise, application must split the string value of the cell on the specified separator character and parse each of the resulting strings separately. The cell's value will then be a list. Conversion specifications must use the separator to determine the conversion of a cell into the target format. See 3.12 Parsing cells for more details.",
      "rdfs:domain": "Column"
    },
    {
      "@id": "csvm:skipBlankRows",
      "@type": "rdf:Property",
      "rdfs:label": "skip blank rows",
      "rdfs:comment": "Indicates whether to ignore wholly empty rows (ie rows in which all the cells are empty). The default is false.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:skipColumns",
      "@type": "rdf:Property",
      "rdfs:label": "skip columns",
      "rdfs:comment": "The number of columns to skip at the beginning of each row, before any header columns. The default is 0.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:skipInitialSpace",
      "@type": "rdf:Property",
      "rdfs:label": "skip initial space",
      "rdfs:comment": "If true, sets the trim flag to \"start\". If false, to false.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:skipRows",
      "@type": "rdf:Property",
      "rdfs:label": "skip rows",
      "rdfs:comment": "The number of rows to skip at the beginning of the file, before a header row or tabular data.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:nonNegativeInteger"
    },
    {
      "@id": "csvm:source",
      "@type": "rdf:Property",
      "rdfs:label": "source",
      "rdfs:comment": "If included, the format to which the tabular data should be transformed prior to the transformation using the template. If the value is \"json\", the tabular data should first be transformed first to JSON based on the simple mapping defined in Generating JSON from Tabular Data on the Web. If the value is \"rdf\", it should similarly first be transformed to XML based on the simple mapping defined in Generating RDF from Tabular Data on the Web. If the source property is missing or null then the source of the transformation is the annotated tabular data model.",
      "rdfs:domain": "Template"
    },
    {
      "@id": "csvm:table-direction",
      "@type": "rdf:Property",
      "rdfs:label": "table direction",
      "rdfs:comment": "One of csvm:rtl csvm:ltr or csvm:default. Indicates whether the tables in the group should be displayed with the first column on the right, on the left, or based on the first character in the table that has a specific direction. ",
      "rdfs:domain": {
        "owl:unionOf": [
          "TableGroup",
          "Table"
        ]
      },
      "rdfs:range": "Direction"
    },
    {
      "@id": "csvm:targetFormat",
      "@type": "rdf:Property",
      "rdfs:label": "target format",
      "rdfs:comment": "A URL for the format that will be created through the transformation. If one has been defined, this should be a URL for a media type, in the form http://www.iana.org/assignments/media-types/media-type such as http://www.iana.org/assignments/media-types/text/calendar. Otherwise, it can be any URL that describes the target format.",
      "rdfs:domain": "Template"
    },
    {
      "@id": "csvm:templateFormat",
      "@type": "rdf:Property",
      "rdfs:label": "template format",
      "rdfs:comment": "A URL for the format that is used by the template. If one has been defined, this should be a URL for a media type, in the form http://www.iana.org/assignments/media-types/media-type such as http://www.iana.org/assignments/media-types/application/javascript. Otherwise, it can be any URL that describes the template format.",
      "rdfs:domain": "Template"
    },
    {
      "@id": "csvm:templates",
      "@type": "rdf:Property",
      "rdfs:label": "templates",
      "rdfs:comment": "An array of template specifications that provide mechanisms to transform the tabular data into other formats. ",
      "rdfs:domain": {
        "owl:unionOf": [
          "TableGroup",
          "Table"
        ]
      },
      "rdfs:range": "Template"
    },
    {
      "@id": "csvm:text-direction",
      "@type": "rdf:Property",
      "rdfs:label": "text direction",
      "rdfs:comment": "One of csvm:rtl or csvm:ltr. Indicates whether the text within cells should be displayed by default as left-to-right or right-to-left text. ",
      "rdfs:domain": "Column",
      "rdfs:range": "Direction"
    },
    {
      "@id": "csvm:title",
      "@type": "rdf:Property",
      "rdfs:label": "title",
      "rdfs:comment": "For a Template: A natural language property that describes the format that will be generated from the transformation. This is useful if the target format is a generic format (such as application/json) and the transformation is creating a specific profile of that format.\n\nFor a Column: A natural language property that provides possible alternative names for the column.",
      "rdfs:domain": {
        "owl:unionOf": [
          "Template",
          "Column"
        ]
      }
    },
    {
      "@id": "csvm:trim",
      "@type": "rdf:Property",
      "rdfs:label": "trim",
      "rdfs:comment": "Indicates whether to trim whitespace around cells; may be true, false, start or end. The default is false.",
      "rdfs:domain": "Dialect",
      "rdfs:range": "xsd:boolean"
    },
    {
      "@id": "csvm:uriTemplate",
      "@type": "rdf:Property",
      "rdfs:label": "uri template",
      "rdfs:comment": "A URI template property that may be used to create a unique identifier for each row when mapping data to other formats.",
      "rdfs:domain": "Schema"
    },
    {
      "@id": "csvm:json",
      "@type": "rdfs:Datatype",
      "rdfs:label": "json",
      "rdfs:comment": "A literal containing JSON.",
      "rdfs:subClassOf": "rdfs:Literal"
    },
    {
      "@id": "csvm:default",
      "@type": "Direction",
      "rdfs:label": "default direction",
      "rdfs:comment": "Indicates to use the default text direction."
    },
    {
      "@id": "csvm:ltr",
      "@type": "Direction",
      "rdfs:label": "left to right",
      "rdfs:comment": "Indicates text should be processed left to right."
    },
    {
      "@id": "csvm:rtl",
      "@type": "Direction",
      "rdfs:label": "right to left",
      "rdfs:comment": "Indiects text should be processed right to left"
    }
  ]
}
